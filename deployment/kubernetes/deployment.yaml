apiVersion: apps/v1
kind: Deployment
metadata:
  name: omnistack-api
  namespace: omnistack
  labels:
    app: omnistack
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: omnistack
      component: api
  template:
    metadata:
      labels:
        app: omnistack
        component: api
    spec:
      containers:
      - name: api
        image: omnistack/api:latest
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: omnistack-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: omnistack-secrets
              key: redis-url
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "2"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: omnistack-api
  namespace: omnistack
spec:
  selector:
    app: omnistack
    component: api
  ports:
  - port: 80
    targetPort: 8000
  type: LoadBalancer
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: omnistack-api
  namespace: omnistack
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: omnistack-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: omnistack-ingress
  namespace: omnistack
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - api.omnistack.ai
    secretName: omnistack-tls
  rules:
  - host: api.omnistack.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: omnistack-api
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: omnistack-config
  namespace: omnistack
data:
  ENVIRONMENT: production
  LOG_LEVEL: INFO
  TELEMETRY_ENABLED: "true"
  METRICS_PORT: "9090"
---
apiVersion: v1
kind: Secret
metadata:
  name: omnistack-secrets
  namespace: omnistack
type: Opaque
stringData:
  database-url: postgresql://user:pass@db:5432/omnistack
  redis-url: redis://:pass@redis:6379/0
  jwt-secret: your-jwt-secret-here
  sentry-dsn: your-sentry-dsn-here
